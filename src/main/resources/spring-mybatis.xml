<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.2.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- 自动扫描 -->  
    <context:component-scan base-package="com.gerry.authsystem" />
                        
	<bean id="dataSourceTarget" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="url" value="${jdbcUrl}" />
		<property name="driverClassName" value="${driverClass}" />
		<property name="username" value="${username}"/>
		<property name="password" value="${password}"/>

		<!-- 最大连接数量 -->
		<property name="maxActive" value="20" />
		<!-- 初始化连接 -->
		<property name="initialSize" value="1" />
		<!-- 获取连接时最大等待时间，单位毫秒 -->
		<property name="maxWait" value="60000" />  
		<!-- 最小连接池数量 -->
    	<property name="minIdle" value="1" />
    	<!-- 两个含义：1) Destroy线程会检测连接的间隔时间 2) testWhileIdle的判断依据 -->
    	<property name="timeBetweenEvictionRunsMillis" value="60000" />  
    	<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	    <property name="minEvictableIdleTimeMillis" value="300000" />  
	    
    	<!-- 用来检测连接是否有效的sql，要求是一个查询语句。-->
    	<!-- 如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。 -->
	    <property name="validationQuery" value="SELECT 'x'" />  
	   	<!-- 建议配置为true，不影响性能，并且保证安全性。-->
	   	<!-- 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效-->
	    <property name="testWhileIdle" value="true" />  
    	<!-- 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。-->
	    <property name="testOnBorrow" value="false" />  
    	<!-- 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能-->
	    <property name="testOnReturn" value="false" /> 
	     
    	<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
    	<!-- 如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false。-->
	    <property name="poolPreparedStatements" value="false" />  
	    <property name="maxPoolPreparedStatementPerConnectionSize" value="50" /> 
	    
	   	<!-- druid 连接池的  监控统计用的filter:stat 日志用的filter:log4j 防御sql注入的filter:wall-->
		<property name="filters" value="stat" />
	</bean>

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
		<property name="dataSource" ref="dataSourceTarget" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:/mapping/*.xml" />
	</bean>
	
	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.gerry.authsystem.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
		<property name="dataSource" ref="dataSourceTarget" />
	</bean>
	
	<!-- 事务注解驱动，标注@Transactional的类和方法将具有事务性 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

</beans>